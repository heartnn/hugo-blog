<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ghost on heartnn的自留地</title><link>https://www.heartnn.com/tags/ghost/</link><description>Recent content in Ghost on heartnn的自留地</description><generator>Hugo</generator><language>zh-CN</language><copyright>&amp;copy;2008-2022 heartnn的自留地</copyright><lastBuildDate>Sun, 27 Nov 2016 14:00:29 +0800</lastBuildDate><atom:link href="https://www.heartnn.com/tags/ghost/index.xml" rel="self" type="application/rss+xml"/><item><title>Ghost变得越来越成熟了，已跟随更新到0.11.3</title><link>https://www.heartnn.com/2016/11/27/update-to-ghost-0-11-3/</link><pubDate>Sun, 27 Nov 2016 14:00:29 +0800</pubDate><guid>https://www.heartnn.com/2016/11/27/update-to-ghost-0-11-3/</guid><description>因为新版Ghost已经不支持node 0.10，建在Docker上的ghost可以切换版本最新到6.9，在Openshift上可以利用@icflorescu/openshift-cartridge-nodejs另外建一个自动更新版本的node。
这里比较注意的是需要通过.openshift/NODE_VERSION_URL和.openshift/NPM_VERSION_URL来自定义版本，最好是使用node自带的npm版本(更新到最新的npm貌似不行。)
https://semver.io/node/resolve/6.9.1 https://semver.io/npm/resolve/3.10.8 剩下的直接把本地安装好的Ghost通过git上传到根目录即可，可以抛弃原来的quickstart了。</description></item><item><title>Ghost升级到0.9后感受</title><link>https://www.heartnn.com/2016/08/03/update-to-ghost-0-9/</link><pubDate>Wed, 03 Aug 2016 13:07:26 +0800</pubDate><guid>https://www.heartnn.com/2016/08/03/update-to-ghost-0-9/</guid><description>首先说明的是升级后有一个明显的bug，简单说就是静态页面在网址后加edit会404。
0.9最大的升级就是解决了服务器时间问题，现在可以选择时区了，算是一大进步。
Ghost渐渐抛弃了对nodejs 0.10的支持，转而使用LTS版本。
评论系统顺便切换到了多说，因为Disqus已经DNS污染，即便是https也不能访问到了，只能通过改hosts。</description></item><item><title>更新到Ghost 0.8.0</title><link>https://www.heartnn.com/2016/05/29/update-to-ghost-0-8-0/</link><pubDate>Sun, 29 May 2016 12:18:22 +0800</pubDate><guid>https://www.heartnn.com/2016/05/29/update-to-ghost-0-8-0/</guid><description>最近家中装修，博客也一直荒废着，今天心血来潮打开Ghost的github，发现又更新了版本，虽然还是没有什么大的改变，但还是跟随着官方更新了，顺便更新了qn-store。
Ghost 0.8.0后台开始引入Apps了，这是否意味着插件系统即将到来。另外Labs里多了一个订阅功能，可以订阅到feedly。
唯一需要注意的是config.js需要更新一下了，另外默认模版也有更新，heartnn也正在调整中。</description></item><item><title>在Daocloud安装自定义的Ghost Docker</title><link>https://www.heartnn.com/2016/03/19/setup-custom-ghost-docker-on-daocloud/</link><pubDate>Sat, 19 Mar 2016 10:12:35 +0800</pubDate><guid>https://www.heartnn.com/2016/03/19/setup-custom-ghost-docker-on-daocloud/</guid><description>&lt;p>Daocloud默认赠送2x的容器，正好运行一个Ghost博客，但是Daocloud官方提供的Ghost的安装不能自定义模版和配置。所以我们必须在Docker里做一些更改。&lt;/p>
&lt;p>本人对Docker也是小白一枚，所以过程是比较复杂的，但结果很简单。&lt;/p>
&lt;p>首先准备一个Git仓库，最好是私密的，因为会储存个人配置和修改过的模版。&lt;/p>
&lt;p>首先是修改配置，这里不用Daocloud的持久化存储(因为会占用容器)，数据库使用Daocloud提供的MySQL，附件使用七牛云，邮件系统使用Mailgun，&lt;code>production&lt;/code>部分配置如下：&lt;/p></description></item><item><title>紧随Ghost的官方更新</title><link>https://www.heartnn.com/2016/02/20/follow-ghost-official-update/</link><pubDate>Sat, 20 Feb 2016 21:43:49 +0800</pubDate><guid>https://www.heartnn.com/2016/02/20/follow-ghost-official-update/</guid><description>&lt;p>最近&lt;a href="https://github.com/TryGhost/Ghost/releases">Ghost更新&lt;/a>的有些频繁，0.7.7仅仅一天就被更新，每次&lt;code>npm instsall --production&lt;/code>都要漫长的时间。最好的办法就是换源：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-dos" data-lang="dos">npm config set registry https://registry.npm.taobao.org
&lt;/code>&lt;/pre>&lt;p>有一点疑惑，就是本地&lt;code>npm install --production&lt;/code>时，会卡在&lt;code>preinstall&lt;/code>这里，也就是&lt;code>npm install semver&lt;/code>之后&lt;code>startup-check.js&lt;/code>过不去，跳过也不影响用，heartnn安装的node版本是0.10.35，和Openshift是一样的。&lt;/p></description></item><item><title>Ghost博客修正时区的方法</title><link>https://www.heartnn.com/2015/12/17/fix-ghost-timezone/</link><pubDate>Thu, 17 Dec 2015 09:39:22 +0800</pubDate><guid>https://www.heartnn.com/2015/12/17/fix-ghost-timezone/</guid><description>&lt;p>最近翻看以前的文章时，偶尔发现有的文章显示时间不正确，编辑器里显示的时间是正常的，才知道Ghost里只是显示UTC时间。&lt;/p>
&lt;p>我不知道调整服务器的时区的方法是否可行，因为Ghost在Github上似乎也没有给出绝对的答案，所以解决的办法只能是对应浏览者的本地时区。&lt;/p>
&lt;p>Ghost官方基本给出了&lt;a href="http://dev.ghost.org/local-dates-themes/">解决办法&lt;/a>，利用Moment.js，只需要稍微修改即可。&lt;/p></description></item><item><title>关于Ghost下的301跳转</title><link>https://www.heartnn.com/2015/12/08/ghost-301-redirect/</link><pubDate>Tue, 08 Dec 2015 02:51:05 +0800</pubDate><guid>https://www.heartnn.com/2015/12/08/ghost-301-redirect/</guid><description>&lt;p>借着升级0.7.2，一起解决了non-www向www的域名跳转问题，本来是个很简单的问题，就因为Openshift的特殊性，变的复杂起来。&lt;/p>
&lt;p>如果Google这个问题的话，会有&lt;a href="http://codenimbus.com/2014/01/15/redirecting-www-domain-to-non-www-on-ghost/">www向non-www跳转的解决办法&lt;/a>，并且似乎需要修改&lt;code>core/server/routes/frontend.js&lt;/code>，而且容易引起重定向循环。&lt;/p>
&lt;p>如果用nginx反向代理的话应该会很简答，用Apache的话也可以用&lt;code>.htaccess&lt;/code>解决，但是Openshift里的Nodejs自带的Apache似乎没有mod_rewrite。&lt;/p>
&lt;p>所以结论是在Openshift新建一个php 5.4，利用一下.htaccess。&lt;/p></description></item><item><title>升级Ghost到0.7.1</title><link>https://www.heartnn.com/2015/10/08/update-ghost-to-0-7-1/</link><pubDate>Thu, 08 Oct 2015 22:31:35 +0800</pubDate><guid>https://www.heartnn.com/2015/10/08/update-ghost-to-0-7-1/</guid><description>&lt;p>&lt;a href="https://github.com/TryGhost/Ghost/releases">Ghost&lt;/a>的升级并不像Wordpress那么方便，但也不会像网上说的那么复杂，最近成功从0.6.3的中文版升级到了0.7.1原版，简单记录下心得。&lt;/p>
&lt;p>本人使用的是非正常的升级方法，本地也没有安装nodejs和npm什么的，利用了&lt;a href="http://www.ghostchina.com/download/">ghostchina的完整包&lt;/a>，将node_modules复制，省掉了&lt;code>npm install --production&lt;/code>的步骤(ghostchina上也有介绍)。&lt;/p></description></item><item><title>Openshift安装Ghost的注意事项</title><link>https://www.heartnn.com/2015/06/11/install-ghost-on-openshift/</link><pubDate>Thu, 11 Jun 2015 22:12:28 +0800</pubDate><guid>https://www.heartnn.com/2015/06/11/install-ghost-on-openshift/</guid><description>&lt;p>首先是Openshift的二级域名，一定要ping一下对应的IP，如果是通的，那么意味着绑定域名后是可以正常访问的，如果不通的话，则域名必须绑定到Cloudflare这样类似可以提供CDN的域名解析，或者用Cloudflare提供的SSL访问。&lt;/p>
&lt;p>Openshift提供了&lt;a href="https://github.com/openshift-quickstart/openshift-ghost-quickstart">快速部署&lt;/a>，建议使用，如果一定要自己搭建，需要Google补充许多知识，费力费时，得不偿失。Openshift快速部署目前提供的是0.5.10的版本，和目前的最新版没有太大的区别。&lt;/p>
&lt;p>建议使用git方式部署Ghost，方便以后修改模板等。ssh上传速度可能不快，而且以后代码迁移也不如git方便。不过如果图片附件等不使用第三方存储时建议采用此方法。&lt;/p></description></item><item><title>成功转移到Ghost</title><link>https://www.heartnn.com/2015/06/03/transfer-to-ghost/</link><pubDate>Wed, 03 Jun 2015 02:53:44 +0800</pubDate><guid>https://www.heartnn.com/2015/06/03/transfer-to-ghost/</guid><description>Ghost可以说是越来越成熟，其实有种原因是最近有些受不了Hexo的发布方法，在电脑上倒是很方便，但也需要git和nodejs。反正都是用nodejs，干脆还不如来个在线的(估计很多人和我一样的想法)。
正好最近入了.com域名，用了点时间，将博客文章复制粘贴到了Ghost里(Markdown就是方便)，多说评论重新注册了一个，将原来的评论导出，再导入到新注册的里面，改完评论文章的永久地址，基本上算是收工了。
Ghost对于Markdown的支持是不如Hexo的，而且没有归档页和标签页，只能说基本上够用。我发现我的追求越来越低了，从Typecho以后，基本连个模板都没折腾过，一直就这样原生态了。
目前是nodejs+mysql，速度肯定是不如Hexo时的静态Html快了，不过好处也非常明显，就是可以随时随地的发博客，不用像以前那样必须坐到电脑前了。</description></item></channel></rss>