<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on heartnn的自留地</title><link>https://www.heartnn.com/categories/%E6%8A%80%E6%9C%AF/</link><description>Recent content in 技术 on heartnn的自留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>&amp;copy;2008-2018 heartnn的自留地 &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC&amp;nbsp;BY-NC-SA&amp;nbsp;4.0&lt;/a></copyright><lastBuildDate>Wed, 17 Nov 2021 12:18:42 +0800</lastBuildDate><atom:link href="https://www.heartnn.com/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>解决群晖File Station中文拼音排序问题</title><link>https://www.heartnn.com/2021/11/17/synology-file-station-sort-by-pinyin/</link><pubDate>Wed, 17 Nov 2021 12:18:42 +0800</pubDate><guid>https://www.heartnn.com/2021/11/17/synology-file-station-sort-by-pinyin/</guid><description>&lt;p>方法来自：&lt;a href="https://blog.icedream.xyz/2020/01/01/%E7%A0%B4%E8%A7%A3%E7%BE%A4%E6%99%96file-station%E4%B8%AD%E6%96%87%E6%9C%AA%E6%8C%89%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/">https://blog.icedream.xyz/2020/01/01/破解群晖file-station中文未按拼音排序问题/&lt;/a>&lt;/p>
&lt;p>以下基于DS3617xs DSM 6.23-25426 Update 3 (x64)&lt;/p>
&lt;p>涉及修改文件为&lt;code>/usr/lib/libsynocore.so.6&lt;/code>。&lt;/p>
&lt;p>&lt;code>ucol_open&lt;/code>涉及到以下代码位置：&lt;/p>
&lt;pre tabindex="0">&lt;code>LOAD:000000000001650F lea rsi, [rsp+28h+var_1C]
LOAD:0000000000016514 lea rdi, aPStartAddress+12h ; &amp;quot;&amp;quot;
LOAD:000000000001651B call _ucol_open
&lt;/code>&lt;/pre>&lt;p>具体修改操作：&lt;/p>
&lt;p>具体操作：&lt;/p>
&lt;ol>
&lt;li>将&lt;code>48 8D 3D 8E A8 00 00&lt;/code>替换成&lt;code>48 8D 3D 7B AF 00 00&lt;/code>。&lt;/li>
&lt;li>查找字符串&lt;code>string_join.c&lt;/code>，并替换成&lt;code>string_joinzh&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>结论：这样修改完成后，在File Station中按拼音排序时，中文目录会排列到所有英文目录前。&lt;/p></description></item><item><title>黑群晖在路由器重启后自动获取最新的IPv6并更新DDNS</title><link>https://www.heartnn.com/2021/03/24/synology-ipv6-ddns-autoupdate/</link><pubDate>Wed, 24 Mar 2021 09:59:12 +0800</pubDate><guid>https://www.heartnn.com/2021/03/24/synology-ipv6-ddns-autoupdate/</guid><description>&lt;p>首先说明，白群晖也可以这么折腾，但没必要。&lt;/p>
&lt;p>下面的问题以及解决方法都是基于&lt;code>ip addr&lt;/code>的方法更新记录的，如果是访问第三方网站获取本机IP的话，应该不存在这些问题。&lt;/p>
&lt;p>起因是由于黑群晖在路由器重启后，前缀发生改变，但旧的IPv6地址并没有释放，所以造成会有很多IPv6的公网地址，当然只有最新的才可以访问到群晖，这时很多DDNS脚本都没有对此的解决方案，一般脚本获取到多个地址时，就会将第一个地址更新到DDNS解析网站上。&lt;/p>
&lt;p>虽然新地址与旧地址并没有什么规律可循，但是每次路由器重启后，会分配一个DHCPv6给群晖（我的OpenWrt是通过DHCPv6-PD分配地址的），并且这个后缀一般不会存在多个地址，所以最后就利用这个IPv6来更新DDNS。&lt;/p></description></item><item><title>关于 Switch 美区购买错误代码 2813-1771</title><link>https://www.heartnn.com/2019/12/18/switch-error-code-2813-1771/</link><pubDate>Wed, 18 Dec 2019 15:08:09 +0800</pubDate><guid>https://www.heartnn.com/2019/12/18/switch-error-code-2813-1771/</guid><description>&lt;p>Switch 港区 eShop 已经建好了，现在在美区购买游戏，就会出现错误代码 2813-1771。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2019/12/switch-2813-1771.png" alt="">&lt;/p>
&lt;p>首先说问题原因，其实以前美区就规定了的，必须是美区本地的信用卡才可以购买游戏，之间国内的信用卡也可以购买，完全就是因为大陆不属于任何分区，所以才排除在外了，国内注册的 Paypal 也是同样原理。&lt;/p>
&lt;blockquote>
&lt;p>目前任天堂分区（网上总结，可能有错误）：&lt;/p>
&lt;ul>
&lt;li>美区：美国、加拿大、墨西哥&lt;/li>
&lt;li>亚区：日本 、韩国、香港、台湾&lt;/li>
&lt;li>欧区：欧盟国家、英国、南非、澳大利亚、新西兰&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>其中，澳大利亚和新西兰也可能是单独分区。&lt;/p></description></item><item><title>一劳永逸调整Ubuntu在VMware下的显示分辨率</title><link>https://www.heartnn.com/2019/11/21/ubuntu-display-resolution-on-vmware/</link><pubDate>Thu, 21 Nov 2019 19:37:09 +0800</pubDate><guid>https://www.heartnn.com/2019/11/21/ubuntu-display-resolution-on-vmware/</guid><description>&lt;p>最近在虚拟机上安装了Xubuntu，用来编译一些软件，但VMware提供的分辨率有限，连常用的1920x1080都没有，参考以前的方法来修改分辨率也有不一样的地方，记录下来，需要的朋友可以借鉴。&lt;/p>
&lt;p>&lt;a href="https://wiki.archlinux.org/index.php/Xrandr_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29#%E6%B7%BB%E5%8A%A0%E6%9C%AA%E8%A2%AB%E6%A3%80%E6%B5%8B%E5%88%B0%E7%9A%84%E6%9C%89%E6%95%88%E5%88%86%E8%BE%A8%E7%8E%87">Archlinux的维基&lt;/a>上给出了比较明确的方法，比网上教大家加入到&lt;code>~/.profiles&lt;/code>的方法要好的多。&lt;/p>
&lt;p>在实际应用的时候，发现不存在&lt;code>/etc/X11/xorg.conf&lt;/code>这个文件，继续Google，得到可以重新生成这个文件。&lt;/p>
&lt;p>首先按Ctrl+Alt+F1，进入TTY，普通用户登录，这里需要注意的是在TTY的时候，小键盘的Num Lock其实是关闭的。&lt;/p></description></item><item><title>Virtualbox中安装Manjaro Linux后需要做的一些事</title><link>https://www.heartnn.com/2018/11/21/something-to-do-after-install-manjaro-in-virtualbox/</link><pubDate>Wed, 21 Nov 2018 07:43:27 +0800</pubDate><guid>https://www.heartnn.com/2018/11/21/something-to-do-after-install-manjaro-in-virtualbox/</guid><description>&lt;p>最近爱上了&lt;a href="https://manjaro.org/">Manjaro&lt;/a>这个Linux发行版，尤其是更新到18.0以后，界面看着更舒服了，基于ArchLinux，，自带AUR，用起来非常方便。默认提供了Xfce、KDE、GNOME几种桌面，不过社区版集成了几乎所有主流的桌面。&lt;/p>
&lt;h2 id="一-guest-additions问题">一 Guest Additions问题&lt;/h2>
&lt;p>我安装的Xfce 64bit版本，安装完毕启动Virtualbox后，首先就是共享剪贴板和共享文件夹不能用，查&lt;a href="https://wiki.manjaro.org/index.php?title=Virtualbox#Guest_Additions">wiki&lt;/a>上明白的写着已经集成Guest Additions，但是却完全不能用。经过Google搜索后在Manjaro论坛上有了答案：&lt;/p>
&lt;h3 id="1-安装缺少的组件">1 安装缺少的组件&lt;/h3>
&lt;p>在“添加/删除软件”中搜索&lt;code>virtualbox-guest-utils&lt;/code>，或命令行运行：&lt;/p>
&lt;pre>&lt;code>sudo pacman -S virtualbox-guest-utils
&lt;/code>&lt;/pre>
&lt;p>这里搜索&lt;code>virtualbox&lt;/code>可以看到当前内核对应的guest-modules已经安装了，但是工具包默认没有装。内核模块应该是提供了驱动之类的，共享文件夹什么的只能靠工具包了。&lt;/p></description></item><item><title>解决Cloudflare产生的“ERR_TOO_MANY_REDIRECTS”错误</title><link>https://www.heartnn.com/2018/11/17/resolve-err-too-many-redirects-on-cloudflare/</link><pubDate>Sat, 17 Nov 2018 10:33:23 +0800</pubDate><guid>https://www.heartnn.com/2018/11/17/resolve-err-too-many-redirects-on-cloudflare/</guid><description>&lt;p>昨天打开自己的博客，发现了“ERR_TOO_MANY_REDIRECTS”，估计是最近把DNS改到Cloudflare产生的后果，于是开始排查错误。原来是Cloudflare登录后对应域名的Crypto问题，由于我的域名下有子域名处于http状态，前几天将SSL加密部分从Full SSL改为了Flexible SSL，由此造成的“ERR_TOO_MANY_REDIRECTS”。&lt;/p>
&lt;p>问题找到了，由于我的博客托管在Github，首先去掉Github Pages设置里的Enforce HTTPS选项，因为这里http会被强制跳转到https，而Cloudflare的Flexible SSL选项需要阅读原始服务器的http数据，然后进行加密，再传送过来，如果原始服务器返回https的话，Cloudflare会丢弃https数据，然后再继续请求，这就是造成问题的元凶。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2018/11/github-pages.png" alt="">&lt;/p></description></item><item><title>七牛关闭测试域名后的文件批量下载</title><link>https://www.heartnn.com/2018/10/09/batch-download-qiniu-files/</link><pubDate>Tue, 09 Oct 2018 08:05:34 +0800</pubDate><guid>https://www.heartnn.com/2018/10/09/batch-download-qiniu-files/</guid><description>&lt;p>最近七牛关闭了所有域名的测试域名，没有备案域名的话，会造成bucket里的文件无法下载，反正我是没有备案域名，索性干脆全部导出来。&lt;/p>
&lt;p>由于没有了默认域名，所以无法直接下载，不过由于新建的bucket提供30天测试域名，文件导出还是有办法的。&lt;/p>
&lt;p>预备工作：首先下载七牛提供的&lt;a href="https://github.com/qiniu/qshell">qshell&lt;/a>，下载完毕后提取对应操作系统的可执行文件，比如windows系统重命名为qshell.exe。&lt;/p>
&lt;pre tabindex="0">&lt;code>qshell account AccessKey SecretKey
&lt;/code>&lt;/pre>&lt;p>其中AccessKey和SecretKey去七牛后台可以找到，执行完毕后会在用户目录下生成&lt;code>.qiniu&lt;/code>文件夹，里面的&lt;code>account.json&lt;/code>记录了刚才的信息。&lt;/p>
&lt;p>由于我保存文件的bucket的测试域名已经过期，这里在七牛控制台里新建一个名为temp的bucket用来作为中转，此处请保持新建的bucket和原有的在同一个区域(zone)。&lt;/p></description></item><item><title>Windows 10 Samba连接问题</title><link>https://www.heartnn.com/2018/08/09/windows-10-samba-connection/</link><pubDate>Thu, 09 Aug 2018 15:13:20 +0800</pubDate><guid>https://www.heartnn.com/2018/08/09/windows-10-samba-connection/</guid><description>&lt;p>最近重装完系统，发现连接路由器的Samba服务出现问题，自以为华硕RT-AC68U采用的是Samba 2.0，而且路由器设置里也打开了相应的选项，但似乎Windows 10无法识别。&lt;/p>
&lt;p>结论是只能启用SMB 1.0了，首先打开控制面板&amp;ndash;&amp;gt;程序和功能&amp;ndash;&amp;gt;启用或关闭Windows功能，勾选&lt;code>SMB 1.0/CIFS文件共享支持&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2018/08/windows-components.png" alt="">&lt;/p></description></item><item><title>使用Zerotier为Syncthing打洞</title><link>https://www.heartnn.com/2018/04/03/install-and-config-zerotier-for-syncthing/</link><pubDate>Tue, 03 Apr 2018 19:55:11 +0800</pubDate><guid>https://www.heartnn.com/2018/04/03/install-and-config-zerotier-for-syncthing/</guid><description>&lt;p>最近&lt;a href="https://syncthing.net">Syncthing&lt;/a>越来越慢，有时竟无法连接，翻看官网的&lt;a href="https://github.com/syncthing/syncthing">github&lt;/a>，发现是去掉了kcp，老外竟然说kcp不如tcp快，这真是不符合我国的网络啊。。。&lt;/p>
&lt;p>起初换了&lt;a href="http://verysync.com/">微力同步&lt;/a>，本以为中继服务器在国内，应该好一点吧，谁知道依然是那个样子，毕竟是Syncthing改的，改成Resilio Sync的样子已经不错了，不适合我这种nat到nat的网络，而且没有版本控制，绝对的适合文件分享，而不是文件同步用。&lt;/p>
&lt;p>换回Syncthing的过程又折腾了一次，正赶上VPS抽风，frp也不给力了，好在发现了&lt;a href="https://www.zerotier.com/">Zerotier&lt;/a>这款神器，正好解了燃眉之急。&lt;/p>
&lt;p>Zerotier属于虚拟局域网，可以把不同网络状态下的多个设备组织在一起，正好为我所用。正常注册Zerotier的free账户，然后登陆后，可以在Networks下Create一个新的局域网，会得到一个Newwork ID，设备会依靠这个ID来识别属于哪个局域网，最后是把每一台需要连接的设备都安装Zerotier客户端。&lt;/p></description></item><item><title>在vps上搭建frp</title><link>https://www.heartnn.com/2018/03/23/deploy-frp-on-vps/</link><pubDate>Fri, 23 Mar 2018 19:51:44 +0800</pubDate><guid>https://www.heartnn.com/2018/03/23/deploy-frp-on-vps/</guid><description>&lt;p>&lt;a href="https://github.com/fatedier/frp">frp&lt;/a>是一款内网穿透工具，在现在宽带没有公网IP的年代，NAS服务器之类的，必须使用内网穿透来解决WAN下的访问问题。&lt;/p>
&lt;p>网上有很方便的&lt;a href="http://koolshare.cn/thread-65379-1-1.html">一键安装脚本&lt;/a>，用于VPS上安装frp。&lt;/p>
&lt;p>这里主要说一下服务器以及客户端的配置：&lt;/p>
&lt;p>首先是frps.ini，这个文件一般是脚本配置后自动生成的，这里注释说明一下并稍微添加修改：&lt;/p></description></item><item><title>在Android手机搭建Hexo博客环境</title><link>https://www.heartnn.com/2016/12/24/hexo-blog-on-android/</link><pubDate>Sat, 24 Dec 2016 11:36:44 +0800</pubDate><guid>https://www.heartnn.com/2016/12/24/hexo-blog-on-android/</guid><description>&lt;p>&lt;img src="https://www.heartnn.com/uploads/2016/12/hexo-logo.png" alt="">&lt;/p>
&lt;h3 id="方案对比">方案对比&lt;/h3>
&lt;h4 id="termux">Termux&lt;/h4>
&lt;p>&lt;a href="https://play.google.com/store/apps/details?id=com.termux">Termux&lt;/a>是比较简单的Linux终端，提供简单的开发环境，用来Hexo发布很方便，缺点是终端不支持中文，作者也没有提供多语言。&lt;/p>
&lt;h4 id="linux-deploy">Linux Deploy&lt;/h4>
&lt;p>&lt;a href="https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy">Linux Deploy&lt;/a>可以部署多种Linux发行版，比如Debian和Ubuntu等，可用ssh和图形访问，和PC上没有太多区别。缺点是占用空间可能会较大。&lt;/p></description></item><item><title>在Daocloud安装自定义的Ghost Docker</title><link>https://www.heartnn.com/2016/03/19/setup-custom-ghost-docker-on-daocloud/</link><pubDate>Sat, 19 Mar 2016 10:12:35 +0800</pubDate><guid>https://www.heartnn.com/2016/03/19/setup-custom-ghost-docker-on-daocloud/</guid><description>&lt;p>Daocloud默认赠送2x的容器，正好运行一个Ghost博客，但是Daocloud官方提供的Ghost的安装不能自定义模版和配置。所以我们必须在Docker里做一些更改。&lt;/p>
&lt;p>本人对Docker也是小白一枚，所以过程是比较复杂的，但结果很简单。&lt;/p>
&lt;p>首先准备一个Git仓库，最好是私密的，因为会储存个人配置和修改过的模版。&lt;/p>
&lt;p>首先是修改配置，这里不用Daocloud的持久化存储(因为会占用容器)，数据库使用Daocloud提供的MySQL，附件使用七牛云，邮件系统使用Mailgun，&lt;code>production&lt;/code>部分配置如下：&lt;/p></description></item><item><title>使用Daocloud持续构建Hexo</title><link>https://www.heartnn.com/2016/03/17/daocloud-continuous-integration-for-hexo/</link><pubDate>Thu, 17 Mar 2016 23:57:44 +0800</pubDate><guid>https://www.heartnn.com/2016/03/17/daocloud-continuous-integration-for-hexo/</guid><description>&lt;p>本文是针对&lt;a href="https://www.luodaoyi.com/zatan/9.html">《利用Coding和Daocloud打造全自动发布的hexo博客》&lt;/a>的一些解释及补充，感谢原作者。&lt;/p>
&lt;p>此方法的优点就是本地只需要git，无需nodejs环境。将源文件部署于Coding，通过Daocloud持续构建，然后发布到Github。&lt;/p>
&lt;p>在Coding仓库根目录创建&lt;code>daocloud.yml&lt;/code>，文件内容如下：&lt;/p></description></item><item><title>在Android手机中搭建Dnsmasq后续</title><link>https://www.heartnn.com/2015/12/20/dnsmasq-on-android-part-2/</link><pubDate>Sun, 20 Dec 2015 01:21:15 +0800</pubDate><guid>https://www.heartnn.com/2015/12/20/dnsmasq-on-android-part-2/</guid><description>&lt;p>&lt;a href="https://www.heartnn.com/2015/04/26/dnsmasq-on-android/">之前&lt;/a>写了一篇关于如何在Android手机中搭建Dnsmasq的文章，使用起来比较繁琐，现在做一个详细的整理。&lt;/p>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>下载&lt;a href="https://www.heartnn.com/uploads/2015/12/dnsmasq.zip">dnsmasq.zip&lt;/a>备用。&lt;/p>
&lt;h3 id="测试系统是否支持initd">测试系统是否支持init.d&lt;/h3>
&lt;p>将下面的代码保存为&lt;code>00test&lt;/code>，放置于&lt;code>/system/etc/init.d&lt;/code>目录。&lt;/p></description></item><item><title>Ghost博客修正时区的方法</title><link>https://www.heartnn.com/2015/12/17/fix-ghost-timezone/</link><pubDate>Thu, 17 Dec 2015 09:39:22 +0800</pubDate><guid>https://www.heartnn.com/2015/12/17/fix-ghost-timezone/</guid><description>&lt;p>最近翻看以前的文章时，偶尔发现有的文章显示时间不正确，编辑器里显示的时间是正常的，才知道Ghost里只是显示UTC时间。&lt;/p>
&lt;p>我不知道调整服务器的时区的方法是否可行，因为Ghost在Github上似乎也没有给出绝对的答案，所以解决的办法只能是对应浏览者的本地时区。&lt;/p>
&lt;p>Ghost官方基本给出了&lt;a href="http://dev.ghost.org/local-dates-themes/">解决办法&lt;/a>，利用Moment.js，只需要稍微修改即可。&lt;/p></description></item><item><title>关于Ghost下的301跳转</title><link>https://www.heartnn.com/2015/12/08/ghost-301-redirect/</link><pubDate>Tue, 08 Dec 2015 02:51:05 +0800</pubDate><guid>https://www.heartnn.com/2015/12/08/ghost-301-redirect/</guid><description>&lt;p>借着升级0.7.2，一起解决了non-www向www的域名跳转问题，本来是个很简单的问题，就因为Openshift的特殊性，变的复杂起来。&lt;/p>
&lt;p>如果Google这个问题的话，会有&lt;a href="http://codenimbus.com/2014/01/15/redirecting-www-domain-to-non-www-on-ghost/">www向non-www跳转的解决办法&lt;/a>，并且似乎需要修改&lt;code>core/server/routes/frontend.js&lt;/code>，而且容易引起重定向循环。&lt;/p>
&lt;p>如果用nginx反向代理的话应该会很简答，用Apache的话也可以用&lt;code>.htaccess&lt;/code>解决，但是Openshift里的Nodejs自带的Apache似乎没有mod_rewrite。&lt;/p>
&lt;p>所以结论是在Openshift新建一个php 5.4，利用一下.htaccess。&lt;/p></description></item><item><title>Openshift安装Ghost的注意事项</title><link>https://www.heartnn.com/2015/06/11/install-ghost-on-openshift/</link><pubDate>Thu, 11 Jun 2015 22:12:28 +0800</pubDate><guid>https://www.heartnn.com/2015/06/11/install-ghost-on-openshift/</guid><description>&lt;p>首先是Openshift的二级域名，一定要ping一下对应的IP，如果是通的，那么意味着绑定域名后是可以正常访问的，如果不通的话，则域名必须绑定到Cloudflare这样类似可以提供CDN的域名解析，或者用Cloudflare提供的SSL访问。&lt;/p>
&lt;p>Openshift提供了&lt;a href="https://github.com/openshift-quickstart/openshift-ghost-quickstart">快速部署&lt;/a>，建议使用，如果一定要自己搭建，需要Google补充许多知识，费力费时，得不偿失。Openshift快速部署目前提供的是0.5.10的版本，和目前的最新版没有太大的区别。&lt;/p>
&lt;p>建议使用git方式部署Ghost，方便以后修改模板等。ssh上传速度可能不快，而且以后代码迁移也不如git方便。不过如果图片附件等不使用第三方存储时建议采用此方法。&lt;/p></description></item><item><title>在OpenShift安装Tiny Tiny RSS的注意事项</title><link>https://www.heartnn.com/2015/04/21/tinytinyrss-on-openshift/</link><pubDate>Tue, 21 Apr 2015 00:34:00 +0800</pubDate><guid>https://www.heartnn.com/2015/04/21/tinytinyrss-on-openshift/</guid><description>&lt;p>上个月心血来潮在OpenShift上重新搭建了一个Tiny Tiny RSS，原来的用的是OpenShift提供的快速安装，数据库也是PostgreSQL，程序也比较旧了，干脆删掉重来。&lt;/p>
&lt;p>先挂上一个运行了一个月的截图：&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2015/04/tt-rss.png" alt="">&lt;/p>
&lt;p>简单叙述一下安装过程，此过程需要一定的git以及OpenShift使用经验。&lt;/p></description></item><item><title>在Fedora中使用金山快盘</title><link>https://www.heartnn.com/2015/03/29/kuaipan-on-fedora/</link><pubDate>Sun, 29 Mar 2015 08:53:00 +0800</pubDate><guid>https://www.heartnn.com/2015/03/29/kuaipan-on-fedora/</guid><description>&lt;p>最近百度云和360云盘都有限速的迹象，反倒是金山快盘没有限速，遂将个人文档迁移到金山中，正好金山提供各种平台的客户端，算是国内最全面的了，可是Linux客户端还是只提供了.deb的安装包，也不知道源代码在哪里。。。这么霸气的节奏，都不开源的吗？还是我没找到。&lt;/p>
&lt;p>网络中提供了在Fedora中安装金山快盘客户端的方法，本人用的Fedora 21 Mate，仅在此环境下说明。&lt;/p>
&lt;p>在&lt;a href="http://www.ubuntukylin.com/applications/showimg.php?lang=cn&amp;amp;id=21">麒麟官网下载&lt;/a>deb安装包并解压缩。&lt;/p>
&lt;p>进入解压缩后的文件夹，复制usr,opt文件夹到文件系统中&lt;/p></description></item><item><title>Windows To Go与Linux共存办法</title><link>https://www.heartnn.com/2015/03/15/windows-to-go-compatible-with-linux/</link><pubDate>Sun, 15 Mar 2015 01:41:00 +0800</pubDate><guid>https://www.heartnn.com/2015/03/15/windows-to-go-compatible-with-linux/</guid><description>&lt;p>本文旨在提供简单的说明，并不提供具体的实施方案，由于硬件设备不同，本文不具有任何通用的可行性。本文的方法不具有唯一性但简单有效，高手请略过。&lt;/p>
&lt;p>首先是对大容量设备的分区， 此处的大容量设备不建议使用U盘，当然64G、128G的USB 3.0另当别论，实际上，一个USB 2.0的移动硬盘就可以工作的很好。分区的时候建议一个主分区安装Windows To Go(以下简称WTG)，然后剩余的做成逻辑分区。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2015/03/partition.png" alt="">&lt;/p></description></item><item><title>打造移动硬盘中使用的Linux发行版</title><link>https://www.heartnn.com/2015/03/02/linux-portable/</link><pubDate>Mon, 02 Mar 2015 09:08:00 +0800</pubDate><guid>https://www.heartnn.com/2015/03/02/linux-portable/</guid><description>&lt;p>起因是由于自己的Ubuntu-Mate在一次折腾中彻底挂掉了，到了开机后桌面一片空白的地步，本着多年使用Windows的习惯，直接重新安装了，于是尝试了许多Linux发行版，结果现在是停留在Xubuntu 14.04.2 LTS上。&lt;/p>
&lt;p>结果还是很开心的，但过程是很艰辛的。&lt;/p>
&lt;p>首先安装后能否使用就是一个最大的问题，在这方面Ubuntu系列要比Fedora做的更好一些，可以从虚拟机中运行安装，然后重启后直接使用，Fedora只能从iso启动然后安装，又多了一道手续。详细的方法不再赘述，简单说明就是在虚拟机中挂载移动硬盘，然后可以安装到整个移动硬盘中，也可以自行分区，需要注意的就是引导一定要安装在移动硬盘里才可以，怕出错的话也可以在建立虚拟机后删掉硬盘。&lt;/p>
&lt;p>关于移动硬盘运行的实际速度，没有用软件进行测量，仅从使用角度来看，在USB 2.0端口速度都还可以的，3.0就不用说了，KDE不在考虑之列。。。&lt;/p>
&lt;p>先说Fedora，是本人放弃掉的一个发行版，并不是说不好用，由于安装时可以采用lvm卷，所以便捷性大增，而且I/O速度确实比Ubuntu要快，在体验上两者没有太大区别，由于内核版本相当，所以速度也没有太大区别，但I/O作为移动系统的一大瓶颈，当然是越快越好了。&lt;/p></description></item><item><title>博客升级到Wordpress 3.2</title><link>https://www.heartnn.com/2011/07/06/update-to-wordpress-3-2/</link><pubDate>Wed, 06 Jul 2011 22:12:00 +0800</pubDate><guid>https://www.heartnn.com/2011/07/06/update-to-wordpress-3-2/</guid><description>确切的说是昨天升级的，基本上没有什么兼容性问题，不过Twenty Eleven主题的问题还算不少。&amp;lt;!&amp;ndash;more&amp;gt;
首先是原来的AI Loader(就是JQuery Lazy Load)不能用了，用YS images lazyload來代替了，並且Twenty Eleven默认没有引用JQuery，所以需要在header.php中添加。
找到
&amp;lt;!--[if lt IE 9]&amp;gt; &amp;lt;script src=&amp;quot;&amp;lt;?php echo get_template_directory_uri(); ?&amp;gt;/js/html5.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;![endif]--&amp;gt; 在上面添加
&amp;lt;?php wp_enqueue_script( &amp;#39;jquery&amp;#39; ); ?&amp;gt;Wordpress 3.2的后台要紧凑了一些，不过heartnn用的Admin Drop Down Menu，所以没感觉有太大变化。(Ozh' Admin Drop Down Menu更新很及时了，刚装上新版Wordpress就马上提示插件更新了～)
PageNavi的问题比较麻烦，原来的主题是自带的页面导航，比较方便，现在Twenty Eleven和以前的Twenty Ten一样麻烦，我是修改的functions.php。
/** * Display navigation to next/previous pages when applicable */ function twentyeleven_content_nav( $nav_id ) { global $wp_query; if(function_exists(&amp;#39;wp_pagenavi&amp;#39;)) { wp_pagenavi();} else if ( $wp_query-&amp;gt;max_num_pages &amp;gt; 1 ) : ?&amp;gt;&amp;lt;nav id=&amp;#34;&amp;lt;?php echo $nav_id; ?</description></item><item><title>自己打造Wordpress的侧边栏RSS订阅图标</title><link>https://www.heartnn.com/2010/12/05/diy-wordpress-rss-widget/</link><pubDate>Sun, 05 Dec 2010 01:02:00 +0800</pubDate><guid>https://www.heartnn.com/2010/12/05/diy-wordpress-rss-widget/</guid><description>&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/12/rss-sign.png" alt="">&lt;/p>
&lt;p>这两天换了主题，想顺便也加强一下RSS订阅吧，于是开始从网上搜索各种插件，结果没有让我感到满意的，不是链接第三方JS，就是自定义功能不强，心想还是自己手工制作吧。&lt;/p>
&lt;p>懒了很久了，自己的制作水平也差了很多，本来很简单的东西折腾了很久。。。&lt;/p>
&lt;p>首先找到一套订阅图标，尽量一致的风格(这个为了美观，你懂的)，然后对每个图像书写链接，这是最简单的办法，例子就不给了，仅使用html代码就能搞定，唯一的缺点是对每个图像都会有一次http请求，感谢速度会比较慢。&lt;/p></description></item><item><title>Fedora 14初级折腾——Flash篇</title><link>https://www.heartnn.com/2010/11/15/install-flash-on-fedora-14/</link><pubDate>Mon, 15 Nov 2010 08:32:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/15/install-flash-on-fedora-14/</guid><description>&lt;p>说实在的，&lt;a href="https://www.heartnn.com/2010/11/14/using-fedora-14/">上次&lt;/a>只是个安装过程，本来不想再继续折腾了的，但是为了折腾精神，还是打开虚拟机继续了。&lt;/p>
&lt;p>打开Konqueror以后，首先碰倒的问题是输入法，不知道是不是脑残的设计，竟然装了中文语言后没有启用输入法。。。&lt;/p>
&lt;p>Konqueror实在不是个好的浏览器，多窗口反应不快，而且窗口太多的时候，新开的窗口会没有连接，不知道是不是Fedora的连接数有问题。&lt;/p>
&lt;p>于是乎求助于常用的Chrome，在Fedora的Wiki里发现了&lt;a href="http://fedoraproject.org/wiki/Chromium">Chromium的repo&lt;/a>，经过了一番下载后(大概是下载了27MB的数据包，还包含几个fedora自己的库)，终于看到了久违的Chromium，于是一切都习惯了～～&lt;/p></description></item><item><title>Fedora 14初级折腾</title><link>https://www.heartnn.com/2010/11/14/using-fedora-14/</link><pubDate>Sun, 14 Nov 2010 06:30:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/14/using-fedora-14/</guid><description>&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/11/fedora-14-release.png" alt="">&lt;/p>
&lt;p>其实Fedora 14出来有一段时间了，上周用VMWare装了一次，因为选错了操作系统类型，所以安装到最后死机了。。。当时好像是选的Red Hat Enterprise，这次是选的Other Linux 2.6.x 64bit，而且把虚拟机的内存增加到了1024MB，这次终于是成功安装了。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/11/fedora-settings.png" alt="">&lt;/p></description></item><item><title>万恶的GAE图床</title><link>https://www.heartnn.com/2010/11/12/sa3album-bug/</link><pubDate>Fri, 12 Nov 2010 09:07:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/12/sa3album-bug/</guid><description>&lt;p>一直用的&lt;a href="http://sa3.org/program/gae-album/">Sa3album&lt;/a>，是从&lt;a href="https://www.heartnn.com/2010/10/27/diabloimage/">大菠萝相册&lt;/a>进化而来的，主要是增加了多相册的功能，生成的图片地址也很短了，但是有一个问题，没有扩展名的后缀，导致绝大多数的lightbox都无法使用，Python代码又完全不会改，各种郁闷。&lt;/p>
&lt;p>但是要仅仅如此郁闷也就算了，这两天折腾wordpress themes，换了theme以后发现原来对图片控制的width=&amp;ldquo;570&amp;quot;是死板的，现在不适合了，于是更郁闷了。&lt;/p>
&lt;p>于是乎开始搜索能自动调整大小的插件，可是那些插件大多是针对本地上传图片所用的，对外链调用的完全不起作用，于是一度想放弃现在的相册，但是又不太舍得，最后不在google搜索插件了，找到了一段css代码：&lt;/p></description></item><item><title>WordPress插件: External Links New Tab</title><link>https://www.heartnn.com/2010/11/05/wordpress-plugin-external-links-new-tab/</link><pubDate>Fri, 05 Nov 2010 05:06:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/05/wordpress-plugin-external-links-new-tab/</guid><description>&lt;p>这款插件的作用是为所有的站外链接增加&lt;code>rel=&amp;quot;external&amp;quot;&lt;/code>，并且利用javascript将&lt;code>rel=&amp;quot;external&amp;quot;&lt;/code>转换为&lt;code>target=&amp;quot;_blank&amp;quot;&lt;/code>执行，目的是为了符合strict标准。&lt;/p>
&lt;p>这款插件是由&lt;a href="http://wordpress.org/extend/plugins/ldb-external-links/">LDB External Links&lt;/a>和&lt;a href="http://wordpress.org/extend/plugins/jab-external-links-newtab/">JAB External Link New Tab&lt;/a>修改而来，在wordpress 3.0.1下测试通过。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/11/external-links.png" alt="">&lt;/p></description></item><item><title>简单实用的WordPress缓存插件——WP Simple Cache</title><link>https://www.heartnn.com/2010/11/02/wp-simple-cache/</link><pubDate>Tue, 02 Nov 2010 23:42:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/02/wp-simple-cache/</guid><description>&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/11/wp-simple-cache.png" alt="">&lt;/p>
&lt;p>自从前面&lt;a href="https://www.heartnn.com/2010/11/02/something-about-install-wordpress-on-sourceforge/">折腾了SourceForge&lt;/a>以后，总是不太死心，因为WP Super Cache总是安装不成功，我太懒，没有尝试手动安装，估计也很麻烦，光是要配置好那个config就需要改动好多地方，所以干脆去wordpress.org转了一圈，于是发现了&lt;a href="http://wordpress.org/extend/plugins/wp-simple-cache/">WP Simple Cache&lt;/a>。&lt;/p></description></item><item><title>关于Sourceforge上安装WordPress的二三事</title><link>https://www.heartnn.com/2010/11/02/something-about-install-wordpress-on-sourceforge/</link><pubDate>Tue, 02 Nov 2010 01:35:00 +0800</pubDate><guid>https://www.heartnn.com/2010/11/02/something-about-install-wordpress-on-sourceforge/</guid><description>&lt;p>前面写过&lt;a href="https://www.heartnn.com/2010/10/29/setup-wordpress-on-sourceforge/">如何在Sourceforge上安装wordpress&lt;/a>，但是经过后来的调试，不像我想象的那么简单，因为这个空间的写入问题，所以很多插件都不能使用，下面说说感受。&lt;/p>
&lt;p>首先是cache类插件不用想了，由于wp-content目录不可写（可是我明明设置成777了的），所以cache是无法生成的，启动&lt;a href="http://wordpress.org/extend/plugins/wp-super-cache/">WP Super Cache&lt;/a>的后果就是无法进入后台管理。。。空间速度其实还是不错的，尤其是从国外访问，所以没有cache就没有了吧。(这里我想了又想，很可能是服务器的缘故，不单纯是文件夹权限问题。)&lt;/p>
&lt;p>写入wp-config.php的插件也不行，比如&lt;a href="http://wordpress.org/extend/plugins/ps-wp-multi-domain/">PS WP Multi Domain&lt;/a>，不过可以自己编辑一下。类似的，写入.htaccess的也必须手动编辑。&lt;/p></description></item><item><title>关于Wordpress的gzip输出</title><link>https://www.heartnn.com/2010/10/29/wordpress-gzip-output/</link><pubDate>Fri, 29 Oct 2010 01:51:00 +0800</pubDate><guid>https://www.heartnn.com/2010/10/29/wordpress-gzip-output/</guid><description>&lt;p>gzip输出的目的是可以有效地减少文件大小，以利于更快速的传输。&lt;/p>
&lt;p>观看本文之前，请先到&lt;a href="http://www.whatsmyip.org/http_compression/">这里&lt;/a>检查你的网站是否已经启用gzip，如果已经启用，请忽略本文。&lt;/p>
&lt;p>wordpress从2.5版本开始，不再提供gzip输出选项，而改代码又相对复杂，于是寻找一个可用的插件是必要的。&lt;/p>
&lt;p>我用的是&lt;a href="http://wordpress.org/extend/plugins/wpcompressor/">wpCompressor&lt;/a>，目前的最新版本是0.3，插件很小，是单文件的。&lt;/p>
&lt;p>使用中有个小问题，就是这个插件开启时，影响了xmlrpc，也就是说我的ScribeFire不起作用了。。。&lt;/p>
&lt;p>于是乎改插件吧（本人不会做插件，但改改还是会的，&lt;code>o(*≧▽≦)ツ）&lt;/code>，在gzip输出地时候排除了&lt;code>xmlrpc.php&lt;/code>文件。反正这个文件也不会访问到的。 改好的代码在下面：&lt;/p></description></item><item><title>用SourceForge.net建立WordPress</title><link>https://www.heartnn.com/2010/10/29/setup-wordpress-on-sourceforge/</link><pubDate>Fri, 29 Oct 2010 00:09:00 +0800</pubDate><guid>https://www.heartnn.com/2010/10/29/setup-wordpress-on-sourceforge/</guid><description>&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/10/about-sourceforge.png" alt="">&lt;/p>
&lt;p>说来惭愧，6年前就创建了SourceForge(以下简称sf)的账号，但是从来没用过，最近无事，于是登陆来折腾一下～～发现sf空间的确是支持php的，很是欣喜。建立了一个Wordpress也成功了，当然用了点手段，想知道怎么折腾请往下看。(我不确定这样做是不是违反了sf的规定，因为sf本身提供了wordpress的博客，当然是不能自定义的那种了，下面会介绍到。)&lt;/p>
&lt;p>首先是没有账号的先去注册个(这是废话。。。)，登陆后点上面的Create Project。&lt;/p>
&lt;p>&lt;img src="https://www.heartnn.com/uploads/2010/10/sourceforge-home.png" alt="">&lt;/p></description></item><item><title>WordPress数据库优化那点事</title><link>https://www.heartnn.com/2010/10/19/wordpress-database-optimization/</link><pubDate>Tue, 19 Oct 2010 23:51:00 +0800</pubDate><guid>https://www.heartnn.com/2010/10/19/wordpress-database-optimization/</guid><description>&lt;p>由于最近又开始写博客了，于是重新折腾WP，但是毕竟两年不用，许多设置都生疏了，前两天更是因为一个插件问题，导致xmlrpc不能使用，更是郁闷了半天。&lt;/p>
&lt;p>闲话少说，关于数据库优化来说，无非也就是那几点，先是版本控制，wordpress现在每修改一次文章，就会生成一个新的版本，着实让人不爽，对我们平头百姓也确实没什么用处。解决的方法很简单，用那个&lt;a href="http://wordpress.org/extend/plugins/super-switch/">Super Switch&lt;/a>插件吧，或者更简单的，在wp-config.php文件中加上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#a6e22e">define&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;WP_POST_REVISIONS&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一般我都是加在调试开关的下面。 接下来该处理的就是后台首页的rss内容了，网上的处理一般是在wp-config.php里增加&lt;/p></description></item><item><title>在GAE上部署hyk-proxy</title><link>https://www.heartnn.com/2010/09/19/deploy-hyk-proxy-on-google-app-engine/</link><pubDate>Sun, 19 Sep 2010 01:45:00 +0800</pubDate><guid>https://www.heartnn.com/2010/09/19/deploy-hyk-proxy-on-google-app-engine/</guid><description>&lt;p>hyk-proxy是一个web proxy框架，支持基于&lt;a href="https://appengine.google.com/">Google AppEngine&lt;/a>平台和&lt;a href="https://seattlegeni.cs.washington.edu/">Seattle平台&lt;/a>，以及PHP Web空间的proxy实现。&lt;/p>
&lt;p>在这篇文章中，我们只介绍最简单的Google AppEngine下的搭建及客户端的配置。&lt;/p>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ul>
&lt;li>基础环境：&lt;a href="http://www.java.com">JRE&lt;/a>&lt;/li>
&lt;li>源代码：&lt;a href="https://code.google.com/p/hyk-proxy/downloads/detail?name=hyk-proxy-gae-server-0.9.0.zip&amp;amp;can=2&amp;amp;q=">hyk-proxy-gae-server-0.9.0.zip&lt;/a> 和 &lt;a href="https://code.google.com/p/hyk-proxy/downloads/detail?name=hyk-proxy-0.9.0.zip&amp;amp;can=2&amp;amp;q=">hyk-proxy-0.9.0.zip&lt;/a>&lt;/li>
&lt;li>GAE Java SDK：&lt;a href="https://googleappengine.googlecode.com/files/appengine-java-sdk-1.3.7.zip">appengine-java-sdk-1.3.7.zip&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>